/*  =========================================================================
    zm-alert - generated layer of public API

    Copyright (C) 2016 - 2017 Tomas Halman                                 
                                                                           
    This program is free software; you can redistribute it and/or modify   
    it under the terms of the GNU General Public License as published by   
    the Free Software Foundation; either version 2 of the License, or      
    (at your option) any later version.                                    
                                                                           
    This program is distributed in the hope that it will be useful,        
    but WITHOUT ANY WARRANTY; without even the implied warranty of         
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          
    GNU General Public License for more details.                           
                                                                           
    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.            

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
    =========================================================================
*/

#ifndef ZM_ALERT_LIBRARY_H_INCLUDED
#define ZM_ALERT_LIBRARY_H_INCLUDED

//  Set up environment for the application

//  External dependencies
#include <czmq.h>
#include <malamute.h>
#include <zmproto.h>
#include <lua.h>

//  ZM_ALERT version macros for compile-time API detection
#define ZM_ALERT_VERSION_MAJOR 0
#define ZM_ALERT_VERSION_MINOR 1
#define ZM_ALERT_VERSION_PATCH 0

#define ZM_ALERT_MAKE_VERSION(major, minor, patch) \
    ((major) * 10000 + (minor) * 100 + (patch))
#define ZM_ALERT_VERSION \
    ZM_ALERT_MAKE_VERSION(ZM_ALERT_VERSION_MAJOR, ZM_ALERT_VERSION_MINOR, ZM_ALERT_VERSION_PATCH)

#if defined (__WINDOWS__)
#   if defined ZM_ALERT_STATIC
#       define ZM_ALERT_EXPORT
#   elif defined ZM_ALERT_INTERNAL_BUILD
#       if defined DLL_EXPORT
#           define ZM_ALERT_EXPORT __declspec(dllexport)
#       else
#           define ZM_ALERT_EXPORT
#       endif
#   elif defined ZM_ALERT_EXPORTS
#       define ZM_ALERT_EXPORT __declspec(dllexport)
#   else
#       define ZM_ALERT_EXPORT __declspec(dllimport)
#   endif
#   define ZM_ALERT_PRIVATE
#else
#   define ZM_ALERT_EXPORT
#   if (defined __GNUC__ && __GNUC__ >= 4) || defined __INTEL_COMPILER
#       define ZM_ALERT_PRIVATE __attribute__ ((visibility ("hidden")))
#   else
#       define ZM_ALERT_PRIVATE
#   endif
#endif

//  Opaque class structures to allow forward references
//  These classes are stable or legacy and built in all releases
typedef struct _flexible_alert_t flexible_alert_t;
#define FLEXIBLE_ALERT_T_DEFINED


//  Public classes, each with its own header file
#include "flexible_alert.h"

#ifdef ZM_ALERT_BUILD_DRAFT_API
//  Self test for private classes
ZM_ALERT_EXPORT void
    zm_alert_private_selftest (bool verbose);
#endif // ZM_ALERT_BUILD_DRAFT_API

#endif
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
